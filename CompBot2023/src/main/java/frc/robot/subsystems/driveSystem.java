// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;
import edu.wpi.first.wpilibj.motorcontrol.Spark;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class driveSystem extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Spark leftFrontMotor;
private Spark leftRearMotor;
private MotorControllerGroup leftSide;
private Spark rightFrontMotor;
private Spark rightRearMotor;
private MotorControllerGroup rightSide;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public driveSystem() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftFrontMotor = new Spark(1);
 addChild("leftFrontMotor",leftFrontMotor);
 leftFrontMotor.setInverted(false);

leftRearMotor = new Spark(2);
 addChild("leftRearMotor",leftRearMotor);
 leftRearMotor.setInverted(false);

leftSide = new MotorControllerGroup(leftFrontMotor, leftRearMotor  );
 addChild("leftSide",leftSide);
 

rightFrontMotor = new Spark(3);
 addChild("rightFrontMotor",rightFrontMotor);
 rightFrontMotor.setInverted(false);

rightRearMotor = new Spark(4);
 addChild("rightRearMotor",rightRearMotor);
 rightRearMotor.setInverted(false);

rightSide = new MotorControllerGroup(rightFrontMotor, rightRearMotor  );
 addChild("rightSide",rightSide);
 


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

